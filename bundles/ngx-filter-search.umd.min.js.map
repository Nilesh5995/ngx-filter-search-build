{"version":3,"sources":["../../../projects/ngx-filter-search/src/lib/ngx-filter-search.service.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-filter-search/src/lib/ngx-filter-search.component.ts","../../../projects/ngx-filter-search/src/lib/ngx-filter-search.module.ts"],"names":["Injectable","args","providedIn","Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","NgxFilterSearchComponent","this","checkChanges","filteredData","EventEmitter","myLots","isChecked","tempFilter","allSelectedFilters","filter","sort","isSorted","defaultFilter","defaultSort","defaultSearch","isUserLoggedIn","tooltip","placement","isVisible","showOn","ticks","largeStep","smallStep","showSmallTicks","step","prototype","ngOnInit","data","setFilterConfig","filterData","customFields","_","isEmpty","item","showFilter","key","c","get","config","fieldsConfigCustomChanges","replaceValue","name","displayName","setCheckBoxFilter","sortCheckBoxesFilter","filterParameter","configIndex","isRangeFilterWithDiffValue","self","j","this_1","isShowFilter","filterBy","hasOwnProperty","lowValueFieldValue","highValueFieldValue","fieldName","fieldValue","obj","filterType","dataType","Number","some","el","previousMin","minValue","previousMax","maxValue","currentMinValue","currentMaxValue","min","max","diff","showLargeTicks","dropdownValue","k","uniq","filterTitle","filterValuesSorting","filterSortDirection","filterCheckBoxLimit","filterByLowValue","filterByHighValue","sortDirection","lowerCase","direction","pickArray","pick","sorted","orderBy","applyFilter","_this","newLots","undefined","searchText","toLocaleLowerCase","mainSearchArray","searchArray","this_2","it","search","searchParameter","searchBy","includes","apply","likedLots","allSelectedCheckBoxesArray","allSelectedRangeFilterArray","selectedLotStatusFilter","index","singleTypeFilterArray","filterSingle","singleRangeSliderFilter","filterSingleRangeFilter","emit","selectedCheckBoxesArrays","newData","filterArrayBasedOnCheckBoxes","uniqueValuesInArray","selectedRangeFilterArrays","isObject","filterArrayRangeFilter","lotsArray","filtered","lots","forEach","element","findIndex","lot_id","rangeFilterArrays","rangeValue","minValueIndex","maxValueIndex","clearSingleFilters","unCheckedCheckBoxes","clearRangeSliderFilter","clearAllFilters","defaultRangeValue","dropDownRangeValues","showMoreItems","showStatus","rangeDropDownOnChange","sliderChange","Component","selector","template","Input","Output","NgModule","declarations","imports","SliderModule","FormsModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxFilterSearchService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output, SimpleChanges } from '@angular/core';\nimport * as _ from 'lodash';\nimport { ChangeEventArgs } from '@syncfusion/ej2-inputs';\n\n@Component({\n  selector: 'lib-ngx-filter-search',\n  // template: `\n  //   <p>\n  //     ngx-filter-search works!\n  //   </p>\n  // `,\n  templateUrl: './ngx-filter-search.component.html',\n  styles: [\n  ]\n})\nexport class NgxFilterSearchComponent implements OnInit {\n  @Input() data: any;\n  @Input() config: any;\n  @Input() likedLots: any;\n  @Input() checkChanges: string = '';\n  @Output() filteredData: EventEmitter<any> = new EventEmitter();\n  public oldData: any;\n  public myLots = { 'isChecked': false }\n  public tempFilter: any = {};\n  public searchText: any;\n  public filterData: any;\n  public allSelectedFilters: any = [];\n  public filter = 'all';\n  public sort = 'lot_number_low';\n  public isSorted: boolean = false;\n  public defaultFilter = 'all';\n  public defaultSort = 'lot_number_low';\n  public defaultSearch = '';\n  public selectedLotStatusFilter: any;\n  public isUserLoggedIn: boolean = false;\n  public customFilters: any;\n\n  public value: number = 30;\n  public tooltip: Object = { placement: 'Before', isVisible: true, showOn: 'Always' };\n  public ticks: Object = { placement: 'After', largeStep: 20, smallStep: 10, showSmallTicks: true };\n  public step: number = 50;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if(this.data) {\n      this.setFilterConfig(this.data);\n      this.filterData = this.data;\n    }\n  }\n\n  setFilterConfig(data: any) {\n    for (let i = data.length - 1; i >= 0; i--) {\n      let statusName;\n      data[i]['statusName'] = statusName;\n      // Create the key for the custom fields.... Add the custom_ before each custom filed name...\n      if (data[i].customFields && !_.isEmpty(data[i].customFields)) {\n        const customFields = data[i].customFields;\n          for (const item in customFields) {\n            if (customFields[item].showFilter) {\n              // Create the unique key for the custom fields.\n             let key = 'custom_'+item;\n             // Change the config for the the display name want to show different.\n              const c = _.get(this.config.fieldsConfigCustomChanges, key)\n              if(c) {\n                // Code for adding the empty data as the not dated lots....\n                const value = customFields[item].value == c.value ? c.replaceValue : customFields[item].value;\n                const name =  customFields[item].value == c.value ? c.displayName : customFields[item].value;\n                data[i]['custom_'+customFields[item].name] = value;\n                data[i]['custom_display_'+customFields[item].name] = name;\n              } else {\n                data[i]['custom_'+customFields[item].name] = customFields[item].value\n              }\n            }\n          }\n      }\n      this.setCheckBoxFilter(data[i]);\n    }\n    this.sortCheckBoxesFilter()\n  }\n  setCheckBoxFilter(data: any) {\n    // Checked the filter parameter\n    if(this.config.filter && this.config.filter.filterParameter ) {\n      for(let j = this.config.filter.filterParameter.length -1; j >= 0; j--) {\n        var configIndex = this.config.filter.filterParameter[j];\n       // var fieldType = this.config.filter.filterParameter[j].fieldType;\n        if (configIndex.isShowFilter) {\n          var key = configIndex.filterBy;\n          var isRangeFilterWithDiffValue = false;\n          //data.hasOwnProperty(configIndex.lowValueFieldName) &&  data.hasOwnProperty(configIndex.highValueFieldName)\n          if (data.hasOwnProperty(configIndex.lowValueFieldValue) &&  data.hasOwnProperty(configIndex.highValueFieldValue)) {\n                isRangeFilterWithDiffValue = true;\n                } else {\n                  isRangeFilterWithDiffValue = false;\n                }\n          if (data.hasOwnProperty(key) || isRangeFilterWithDiffValue) {\n             if (this.tempFilter.hasOwnProperty(key)) {\n               if ((data[configIndex.fieldName] && data[configIndex.fieldValue]) || (isRangeFilterWithDiffValue)) {\n                let obj: any = {};\n                if (configIndex.filterType == 'checkBoxes') {\n                  obj['filterBy'] = key;\n                  obj['fieldName'] = data[configIndex.fieldName];\n                  obj['fieldValue'] =  configIndex.dataType == Number ?  Number(data[configIndex.fieldValue]): data[configIndex.fieldValue];\n                  obj['isChecked'] = false;\n                  //console.log( obj['fieldValue'], 'OBJ FIELDS VALUE')\n                  var self = this;\n                  var isPresent = this.tempFilter[key].some(function(el: any){ return el['fieldValue'] == data[self.config.filter.filterParameter[j].fieldValue]});\n                  if (!isPresent) {\n                    self.tempFilter[self.config.filter.filterParameter[j].filterBy].push(obj);\n                  }\n                } else if(configIndex.filterType == 'range_slider') {\n                    let previousMin = this.tempFilter[key].minValue;\n                    let previousMax = this.tempFilter[key].maxValue;\n                    let currentMinValue =  Number(data[configIndex.lowValueFieldValue]);\n                    let currentMaxValue =  Number(data[configIndex.highValueFieldValue]);\n                    let min = previousMin < currentMinValue ? previousMin : currentMinValue;\n                    let max = previousMax > currentMaxValue ? previousMax : currentMaxValue;\n                    this.tempFilter[key]['minValue'] = min;\n                    this.tempFilter[key]['maxValue'] = max;\n                    this.tempFilter[key]['rangeValue'] = [];\n                    this.tempFilter[key]['defaultRangeValue'] = [];\n                    this.tempFilter[key]['dropDownRangeValues'] = [];\n                    this.tempFilter[key]['rangeValue'].push(min);\n                    this.tempFilter[key]['rangeValue'].push(max);\n                    let smallStep = configIndex.step ? (configIndex.step * 2) : 100\n                    let largeStep = configIndex.step || 50;\n                    let diff = max - min;\n                    this.tempFilter[key]['smallStep'] = diff / smallStep ;\n                    this.tempFilter[key]['largeStep'] = diff / largeStep ;\n                    this.tempFilter[key]['ticks'] = { placement: 'After', largeStep: diff / largeStep  , smallStep: diff / smallStep, showSmallTicks: true, showLargeTicks: false };\n                    this.tempFilter[key]['defaultRangeValue'].push(min);\n                    this.tempFilter[key]['defaultRangeValue'].push(max);\n                    this.tempFilter[key]['dropDownRangeValues'].push(min);\n                    this.tempFilter[key]['dropDownRangeValues'].push(max);\n                    this.tempFilter[key]['rangeStep'] = smallStep //diff / smallStep;\n                  //   filterArrayRangeFilter\n                  // showOn: 'Always'\n                  this.tempFilter[key]['dropdown'] = [];\n                  let dropdownValue = min;\n                   for (let k = 0; k <= smallStep; k ++) {\n                    this.tempFilter[key]['dropdown'].push(dropdownValue);\n                     dropdownValue = (diff / smallStep) + dropdownValue;\n                   }\n                   this.tempFilter[key]['dropdown'] = _. uniq(this.tempFilter[key]['dropdown'])\n                  }\n               }\n             } else {\n                let obj: any = {};\n                if (configIndex.isShowFilter) {\n                  if ((data[configIndex.fieldName] && data[configIndex.fieldValue]) || (isRangeFilterWithDiffValue)) {\n                    this.tempFilter[key] = [];\n                    this.tempFilter[key]['filterTitle'] = configIndex.filterTitle;\n                    this.tempFilter[key]['isShowFilter'] = configIndex.isShowFilter;\n                    this.tempFilter[key]['filterBy'] = key;\n                    this.tempFilter[key]['filterValuesSorting'] = configIndex.filterValuesSorting;\n                    this.tempFilter[key]['filterSortDirection'] = configIndex.filterSortDirection;\n                    this.tempFilter[key]['isShowMore'] = false;\n                    this.tempFilter[key]['filterCheckBoxLimit'] = configIndex.filterCheckBoxLimit;\n                    this.tempFilter[key]['filterType'] = configIndex.filterType;\n                    if (configIndex.filterType == 'checkBoxes') {\n                      obj['filterBy'] = key;\n                      obj['fieldName'] = data[configIndex.fieldName];\n                      obj['fieldValue'] =  configIndex.dataType == Number ?  Number(data[configIndex.fieldValue]): data[configIndex.fieldValue];\n                      obj['isChecked'] = false;\n                      this.tempFilter[key].push(obj);\n                    } else if(configIndex.filterType == 'range_slider') {\n                      this.tempFilter[key]['filterByLowValue'] = configIndex.filterByLowValue;\n                      this.tempFilter[key]['filterByHighValue'] = configIndex.filterByHighValue;\n                      this.tempFilter[key]['rangeValue'] = [];\n                      this.tempFilter[key]['defaultRangeValue'] = [];\n                      this.tempFilter[key]['dropDownRangeValues'] = [];\n                      let min = Number(data[configIndex.lowValueFieldValue]);\n                      let max = Number(data[configIndex.highValueFieldValue]);\n                      this.tempFilter[key]['minValue'] = min;\n                      this.tempFilter[key]['maxValue'] = max\n                      this.tempFilter[key]['rangeValue'].push(min);\n                      this.tempFilter[key]['rangeValue'].push(max);\n                      this.tempFilter[key]['defaultRangeValue'].push(min);\n                      this.tempFilter[key]['defaultRangeValue'].push(max);\n                      this.tempFilter[key]['dropDownRangeValues'].push(min);\n                      this.tempFilter[key]['dropDownRangeValues'].push(max);\n                      let step = configIndex.step || 100;\n                      this.tempFilter[key]['dropdown'] = [];\n                      this.tempFilter[key]['rangeStep'] =  configIndex.step * 2;//(min + max) / step;\n                    }\n                  }\n                }\n             }\n          }\n        }\n      }\n    }\n  }\n\n  sortCheckBoxesFilter() {\n    for(let j = this.config.filter.filterParameter.length -1; j >= 0; j--) {\n      if (this.config.filter.filterParameter[j].isShowFilter) {\n           if (this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[j].filterBy)) {\n             if (this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterValuesSorting\n              && this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterSortDirection\n              && this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterType == 'checkBoxes'\n              ) {\n                 let sortDirection = _.lowerCase(this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterSortDirection);\n                 sortDirection = sortDirection == 'asc'  ? sortDirection : 'desc';\n                 let direction: any = [];\n                 direction.push(sortDirection);\n                 let pickArray = _.pick(this.tempFilter[this.config.filter.filterParameter[j].filterBy], ['filterTitle', 'isShowFilter', 'filterBy', 'filterValuesSorting',\n                 'filterSortDirection', 'isShowMore', 'filterCheckBoxLimit', 'filterType']);\n                 const sorted = _.orderBy(this.tempFilter[this.config.filter.filterParameter[j].filterBy] , ['fieldValue'], direction);\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy] = sorted;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['filterTitle'] = pickArray.filterTitle;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['isShowFilter'] = pickArray.isShowFilter;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['filterBy'] =pickArray.filterBy;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['filterValuesSorting'] = pickArray.filterValuesSorting;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['filterSortDirection'] = pickArray.filterSortDirection;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['isShowMore'] = false;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['filterCheckBoxLimit'] = pickArray.filterCheckBoxLimit;\n                 this.tempFilter[this.config.filter.filterParameter[j].filterBy]['filterType'] = pickArray.filterType;\n              }\n          }\n        }\n      }\n  }\n\n\n  applyFilter() {\n    // Assign the original array without any filter to the newLots\n    var newLots = this.data;\n      // Check the searchText is not undefined and then search the by provided fields.\n      if (this.searchText !== undefined) {\n        this.searchText = this.searchText.toLocaleLowerCase();\n        var mainSearchArray = [];\n          // Search In the all fields given in the config of the search.\n          for (let j = this.config.search.searchParameter.length -1; j >= 0; j--) {\n            let searchArray = []\n            searchArray =  this.data.filter((it: any) => {\n              if (it[this.config.search.searchParameter[j].searchBy] != null && it[this.config.search.searchParameter[j].searchBy] != undefined) {\n                return it[this.config.search.searchParameter[j].searchBy].toLocaleLowerCase().includes(this.searchText);\n              }\n          });\n\n          // Push the each search result...\n          if (searchArray.length > 0) {\n            mainSearchArray.push(...searchArray);\n          }\n\n          // Assign the searched Array to the lots Array.\n          newLots = mainSearchArray;\n        }\n      }\n\n      // Checked the my Lots status.\n      if (this.myLots.isChecked) {\n        if (this.likedLots.length > 0) {\n          newLots = this.likedLots;\n        }\n      }\n\n      var allSelectedCheckBoxesArray = [];\n      var allSelectedRangeFilterArray = [];\n      // Check the config for the filter....\n      for(let j = this.config.filter.filterParameter.length -1; j >= 0; j--) {\n        // Check the status of the filter\n        if (this.config.filter.filterParameter[j].isShowFilter) {\n          if (this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[j].filterBy) && this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterType == 'checkBoxes') {\n            // Filter the checked Values\n            this.selectedLotStatusFilter =  this.tempFilter[this.config.filter.filterParameter[j].filterBy].filter((value: any, index: any) => {\n                return value.isChecked\n              });\n            // Push the all checked values in same array\n            allSelectedCheckBoxesArray.push(this.selectedLotStatusFilter);\n          } else if(this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[j].filterBy) && this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterType == 'range_slider') {\n            // If filter type is the Range filter then push the data in the range filter.\n            allSelectedRangeFilterArray.push(this.tempFilter[this.config.filter.filterParameter[j].filterBy]);\n          }\n        }\n      }\n\n      let singleTypeFilterArray = [];\n      this.allSelectedFilters = allSelectedCheckBoxesArray;\n      //Filter the data based on checkboxes\n      if (allSelectedCheckBoxesArray.length > 0) {\n       // Filter the each array at a time, In config multiple filters.\n       singleTypeFilterArray = this.filterSingle(newLots ,allSelectedCheckBoxesArray);\n       newLots = singleTypeFilterArray;\n      } else {\n        newLots = newLots;\n      }\n\n      let singleRangeSliderFilter = [];\n      // Filter the data based on the range filter.\n      if (allSelectedRangeFilterArray.length > 0) {\n      // Filter the each array at a time, In config multiple filters.\n       singleRangeSliderFilter = this.filterSingleRangeFilter(newLots , allSelectedRangeFilterArray);\n        newLots = singleRangeSliderFilter;\n      } else {\n        newLots = newLots;\n      }\n\n      this.filterData = [];\n      this.filterData = newLots;\n\n      // Check the Sorting is applied if Yes then sort the array after filter.\n      if (this.isSorted) {\n        //this.sortLots();\n      } else {\n        this.filteredData.emit(this.filterData);\n      }\n\n      // Emit the value to the parent component\n      //this.addFilterToRoute()\n  }\n\n  filterSingle(data: any, selectedCheckBoxesArrays: any ) {\n    for (let k = selectedCheckBoxesArrays.length -1; k >= 0; k--) {\n      var newData = [];\n      if (selectedCheckBoxesArrays[k].length > 0) {\n        data = this.filterArrayBasedOnCheckBoxes(data, selectedCheckBoxesArrays[k])\n         if (data.length > 0) {\n          newData.push(...data);\n          data = newData;\n       } else {\n         data = [];\n       }\n      }\n    }\n    return this.uniqueValuesInArray(data);\n  }\n\n\n  filterSingleRangeFilter(data: any, selectedRangeFilterArrays: any ) {\n    for (let k = selectedRangeFilterArrays.length -1; k >= 0; k--){\n      var newData = [];\n      if (_.isObject(selectedRangeFilterArrays[k])) {\n        data = this.filterArrayRangeFilter(data, selectedRangeFilterArrays[k]);\n         if (data.length > 0) {\n          newData.push(...data);\n          data = newData;\n          } else {\n            data = [];\n          }\n       }\n    }\n    return this.uniqueValuesInArray(data);\n  }\n\n  filterArrayBasedOnCheckBoxes (lotsArray: any, selectedCheckBoxesArrays: any) {\n    var filtered: any = [];\n    for (var lots in lotsArray) {\n      if (selectedCheckBoxesArrays.length > 0) {\n          selectedCheckBoxesArrays.forEach((element: any) => {\n            if (lotsArray[lots][element.filterBy] == element.fieldValue ){\n              if (filtered.length > 0) {\n                  filtered.push(lotsArray[lots]);\n              } else {\n                filtered.push(lotsArray[lots]);\n              }\n            }\n        });\n      }\n    }\n    return this.uniqueValuesInArray(filtered);\n  }\n\n  uniqueValuesInArray(data: any ) {\n    const uniqueValues = data.filter((element: any, index: number) =>\n    data.findIndex( (obj: any) => obj.lot_id == element.lot_id) == index);\n    return uniqueValues;\n  }\n\n\n  \n\n  filterArrayRangeFilter (lotsArray: any, rangeFilterArrays: any) {\n    var filtered = [];\n    for (var lots in lotsArray) {\n      let min = rangeFilterArrays.rangeValue[0];\n      let max = rangeFilterArrays.rangeValue[1];\n      let minValueIndex = Number(lotsArray[lots][rangeFilterArrays.filterByLowValue]);\n      let maxValueIndex = Number(lotsArray[lots][rangeFilterArrays.filterByHighValue]);\n      if ((minValueIndex >= min && minValueIndex <= max && maxValueIndex >= min && maxValueIndex <= max)){\n          filtered.push(lotsArray[lots]);\n      }\n    }\n    //rangeFilterArrays.dropDownRangeValues = rangeFilterArrays.rangeValue;\n    return this.uniqueValuesInArray(filtered);\n  }\n\n  clearSingleFilters(filterBy: string , filterType?: any) {\n    if (filterBy && filterType == 'checkBoxes') {\n      this.unCheckedCheckBoxes(this.tempFilter[filterBy])\n    } else if (filterBy && filterType == 'range_slider') {\n      this.clearRangeSliderFilter(this.tempFilter[filterBy]);\n    }\n    this.applyFilter();\n  }\n\n  clearAllFilters() {\n    this.filterData = [];\n    this.sort = this.defaultSort;\n    this.searchText = this.defaultSearch;\n    for(let j = this.config.filter.filterParameter.length -1; j >= 0; j--) {\n      if (this.config.filter.filterParameter[j].isShowFilter) {\n           if ((this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[j].filterBy) && \n           (this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterType === 'checkBoxes'))) {\n            this.unCheckedCheckBoxes(this.tempFilter[this.config.filter.filterParameter[j].filterBy]);\n          } else if ((this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[j].filterBy) &&\n           (this.tempFilter[this.config.filter.filterParameter[j].filterBy].filterType === 'range_slider'))) {\n            this.clearRangeSliderFilter(this.tempFilter[this.config.filter.filterParameter[j].filterBy])\n           }\n        }\n      }\n    this.filterData = this.data;\n    this.filteredData.emit(this.filterData);\n  }\n\n  unCheckedCheckBoxes(data: any) {\n    data.forEach((element: any) => {\n      element.isChecked = false;\n    })\n  }\n\n  clearRangeSliderFilter(data: any) {\n    data.rangeValue = data.defaultRangeValue;\n    data.dropDownRangeValues = [];\n    data.dropDownRangeValues = data.defaultRangeValue;\n  }\n\n  showMoreItems(filterBy: string,showStatus: boolean) {\n    if(showStatus) {\n      this.tempFilter[filterBy]['filterCheckBoxLimit'] = this.tempFilter[filterBy].length;\n      this.tempFilter[filterBy]['isShowMore'] = true;\n    } else if(!showStatus) {\n      this.tempFilter[filterBy]['isShowMore'] = false;\n    }\n  }\n\n\n  rangeDropDownOnChange(data: any) {\n    data.rangeValue = data.dropDownRangeValues;\n    this.applyFilter();\n  }\n\n  sliderChange(data: any | undefined) {\n    data.dropDownRangeValues = data.rangeValue\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxFilterSearchComponent } from './ngx-filter-search.component';\nimport { SliderModule } from '@syncfusion/ej2-angular-inputs';\nimport { FormsModule } from '@angular/forms';\nimport * as _ from 'lodash';\n\n\n@NgModule({\n  declarations: [NgxFilterSearchComponent],\n  imports: [\n    SliderModule,\n    FormsModule\n  ],\n  exports: [NgxFilterSearchComponent]\n})\nexport class NgxFilterSearchModule { }\n"]}