!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("lodash"),require("@syncfusion/ej2-angular-inputs"),require("@angular/forms"),require("@angular/common"),require("@angular/platform-browser")):"function"==typeof define&&define.amd?define("ngx-filter-search",["exports","@angular/core","lodash","@syncfusion/ej2-angular-inputs","@angular/forms","@angular/common","@angular/platform-browser"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-filter-search"]={},e.ng.core,e._,e.ej2AngularInputs,e.ng.forms,e.ng.common,e.ng.platformBrowser)}(this,(function(e,t,i,r,l,n,a){"use strict";function o(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(i){if("default"!==i){var r=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(t,i,r.get?r:{enumerable:!0,get:function(){return e[i]}})}})),t.default=e,Object.freeze(t)}var f=o(t),s=o(i),c=function(){};c.ɵprov=f.ɵɵdefineInjectable({factory:function(){return new c},token:c,providedIn:"root"}),c.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],c.ctorParameters=function(){return[]};Object.create;function p(e,t){var i="function"==typeof Symbol&&e[Symbol.iterator];if(!i)return e;var r,l,n=i.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=n.next()).done;)a.push(r.value)}catch(e){l={error:e}}finally{try{r&&!r.done&&(i=n.return)&&i.call(n)}finally{if(l)throw l.error}}return a}function h(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(p(arguments[t]));return e}Object.create;var m=function(){function e(){this.filteredData=new t.EventEmitter,this.tempFilter={},this.allSelectedFilters=[],this.filter="all",this.sort="lot_number_low",this.isSorted=!1,this.defaultFilter="all",this.defaultSort="lot_number_low",this.defaultSearch="",this.value=30,this.tooltip={placement:"Before",isVisible:!0,showOn:"Always"},this.ticks={placement:"After",largeStep:20,smallStep:10,showSmallTicks:!0},this.step=50}return e.prototype.ngOnInit=function(){this.data&&this.config?(this.setFilterConfig(this.data),this.filterData=this.data):console.log("please Add the data and config")},e.prototype.setFilterConfig=function(e){for(var t=e.length-1;t>=0;t--){if(e[t].statusName=void 0,e[t].customFields&&!s.isEmpty(e[t].customFields)){var i=e[t].customFields;for(var r in i)if(i[r].showFilter){var l="custom_"+r,n=s.get(this.config.fieldsConfigCustomChanges,l);if(n){var a=i[r].value==n.value?n.replaceValue:i[r].value,o=i[r].value==n.value?n.displayName:i[r].value;e[t]["custom_"+i[r].name]=a,e[t]["custom_display_"+i[r].name]=o}else e[t]["custom_"+i[r].name]=i[r].value}}this.setCheckBoxFilter(e[t])}this.sortCheckBoxesFilter()},e.prototype.setCheckBoxFilter=function(e){if(this.config.filter&&this.config.filter.filterParameter)for(var t,i,r,l,n=function(n){if((t=a.config.filter.filterParameter[n]).isShowFilter&&(i=t.filterBy,r=!1,r=!(!e.hasOwnProperty(t.lowValueFieldValue)||!e.hasOwnProperty(t.highValueFieldValue)),e.hasOwnProperty(i)||r))if(a.tempFilter.hasOwnProperty(i)){if(e[t.fieldName]&&e[t.fieldValue]||r){var o={};if("checkBoxes"==t.filterType)o.filterBy=i,o.fieldName=e[t.fieldName],o.fieldValue=t.dataType==Number?Number(e[t.fieldValue]):e[t.fieldValue],o.isChecked=!1,l=a,a.tempFilter[i].some((function(t){return t.fieldValue==e[l.config.filter.filterParameter[n].fieldValue]}))||l.tempFilter[l.config.filter.filterParameter[n].filterBy].push(o);else if("range_slider"==t.filterType){var f=a.tempFilter[i].minValue,c=a.tempFilter[i].maxValue,p=Number(e[t.lowValueFieldValue]),h=Number(e[t.highValueFieldValue]),m=f<p?f:p,u=c>h?c:h;a.tempFilter[i].minValue=m,a.tempFilter[i].maxValue=u,a.tempFilter[i].rangeValue=[],a.tempFilter[i].defaultRangeValue=[],a.tempFilter[i].dropDownRangeValues=[],a.tempFilter[i].rangeValue.push(m),a.tempFilter[i].rangeValue.push(u);var g=t.step?2*t.step:100,d=t.step||50,y=u-m;a.tempFilter[i].smallStep=y/g,a.tempFilter[i].largeStep=y/d,a.tempFilter[i].ticks={placement:"After",largeStep:y/d,smallStep:y/g,showSmallTicks:!0,showLargeTicks:!1},a.tempFilter[i].defaultRangeValue.push(m),a.tempFilter[i].defaultRangeValue.push(u),a.tempFilter[i].dropDownRangeValues.push(m),a.tempFilter[i].dropDownRangeValues.push(u),a.tempFilter[i].rangeStep=g,a.tempFilter[i].dropdown=[];for(var F=m,B=0;B<=g;B++)a.tempFilter[i].dropdown.push(F),F=y/g+F;a.tempFilter[i].dropdown=s.uniq(a.tempFilter[i].dropdown)}}}else{o={};if(t.isShowFilter&&(e[t.fieldName]&&e[t.fieldValue]||r))if(a.tempFilter[i]=[],a.tempFilter[i].filterTitle=t.filterTitle,a.tempFilter[i].isShowFilter=t.isShowFilter,a.tempFilter[i].filterBy=i,a.tempFilter[i].filterValuesSorting=t.filterValuesSorting,a.tempFilter[i].filterSortDirection=t.filterSortDirection,a.tempFilter[i].isShowMore=!1,a.tempFilter[i].filterCheckBoxLimit=t.filterCheckBoxLimit,a.tempFilter[i].filterType=t.filterType,"checkBoxes"==t.filterType)o.filterBy=i,o.fieldName=e[t.fieldName],o.fieldValue=t.dataType==Number?Number(e[t.fieldValue]):e[t.fieldValue],o.isChecked=!1,a.tempFilter[i].push(o);else if("range_slider"==t.filterType){a.tempFilter[i].filterByLowValue=t.filterByLowValue,a.tempFilter[i].filterByHighValue=t.filterByHighValue,a.tempFilter[i].rangeValue=[],a.tempFilter[i].defaultRangeValue=[],a.tempFilter[i].dropDownRangeValues=[];m=Number(e[t.lowValueFieldValue]),u=Number(e[t.highValueFieldValue]);a.tempFilter[i].minValue=m,a.tempFilter[i].maxValue=u,a.tempFilter[i].rangeValue.push(m),a.tempFilter[i].rangeValue.push(u),a.tempFilter[i].defaultRangeValue.push(m),a.tempFilter[i].defaultRangeValue.push(u),a.tempFilter[i].dropDownRangeValues.push(m),a.tempFilter[i].dropDownRangeValues.push(u);t.step;a.tempFilter[i].dropdown=[],a.tempFilter[i].rangeStep=2*t.step}}},a=this,o=this.config.filter.filterParameter.length-1;o>=0;o--)n(o)},e.prototype.sortCheckBoxesFilter=function(){for(var e=this.config.filter.filterParameter.length-1;e>=0;e--)if(this.config.filter.filterParameter[e].isShowFilter&&this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[e].filterBy)&&this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterValuesSorting&&this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterSortDirection&&"checkBoxes"==this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterType){var t=s.lowerCase(this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterSortDirection);t="asc"==t?t:"desc";var i=[];i.push(t);var r=s.pick(this.tempFilter[this.config.filter.filterParameter[e].filterBy],["filterTitle","isShowFilter","filterBy","filterValuesSorting","filterSortDirection","isShowMore","filterCheckBoxLimit","filterType"]),l=s.orderBy(this.tempFilter[this.config.filter.filterParameter[e].filterBy],["fieldValue"],i);this.tempFilter[this.config.filter.filterParameter[e].filterBy]=l,this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterTitle=r.filterTitle,this.tempFilter[this.config.filter.filterParameter[e].filterBy].isShowFilter=r.isShowFilter,this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterBy=r.filterBy,this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterValuesSorting=r.filterValuesSorting,this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterSortDirection=r.filterSortDirection,this.tempFilter[this.config.filter.filterParameter[e].filterBy].isShowMore=!1,this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterCheckBoxLimit=r.filterCheckBoxLimit,this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterType=r.filterType}},e.prototype.applyFilter=function(){var e=this,t=this.data;if(void 0!==this.searchText){this.searchText=this.searchText.toLocaleLowerCase();for(var i=[],r=function(r){var n;(n=l.data.filter((function(t){if(null!=t[e.config.search.searchParameter[r].searchBy]&&null!=t[e.config.search.searchParameter[r].searchBy])return t[e.config.search.searchParameter[r].searchBy].toLocaleLowerCase().includes(e.searchText)}))).length>0&&i.push.apply(i,h(n)),t=i},l=this,n=this.config.search.searchParameter.length-1;n>=0;n--)r(n)}var a=[],o=[];for(n=this.config.filter.filterParameter.length-1;n>=0;n--)this.config.filter.filterParameter[n].isShowFilter&&(this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[n].filterBy)&&"checkBoxes"==this.tempFilter[this.config.filter.filterParameter[n].filterBy].filterType?(this.selectedLotStatusFilter=this.tempFilter[this.config.filter.filterParameter[n].filterBy].filter((function(e,t){return e.isChecked})),a.push(this.selectedLotStatusFilter)):this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[n].filterBy)&&"range_slider"==this.tempFilter[this.config.filter.filterParameter[n].filterBy].filterType&&o.push(this.tempFilter[this.config.filter.filterParameter[n].filterBy]));var f=[];this.allSelectedFilters=a,a.length>0?(f=this.filterSingle(t,a),t=f):t=t;var s=[];o.length>0?(s=this.filterSingleRangeFilter(t,o),t=s):t=t,this.filterData=[],this.filterData=t,this.isSorted||this.filteredData.emit(this.filterData)},e.prototype.filterSingle=function(e,t){for(var i=t.length-1;i>=0;i--){var r=[];t[i].length>0&&((e=this.filterArrayBasedOnCheckBoxes(e,t[i])).length>0?(r.push.apply(r,h(e)),e=r):e=[])}return this.uniqueValuesInArray(e)},e.prototype.filterSingleRangeFilter=function(e,t){for(var i=t.length-1;i>=0;i--){var r=[];s.isObject(t[i])&&((e=this.filterArrayRangeFilter(e,t[i])).length>0?(r.push.apply(r,h(e)),e=r):e=[])}return this.uniqueValuesInArray(e)},e.prototype.filterArrayBasedOnCheckBoxes=function(e,t){var i=[];for(var r in e)t.length>0&&t.forEach((function(t){e[r][t.filterBy]==t.fieldValue&&(i.length,i.push(e[r]))}));return this.uniqueValuesInArray(i)},e.prototype.uniqueValuesInArray=function(e){var t=this;return e.filter((function(i,r){return e.findIndex((function(e){return e[t.config.filter.uniqueColumn]==i[t.config.filter.uniqueColumn]}))==r}))},e.prototype.filterArrayRangeFilter=function(e,t){var i=[];for(var r in e){var l=t.rangeValue[0],n=t.rangeValue[1],a=Number(e[r][t.filterByLowValue]),o=Number(e[r][t.filterByHighValue]);a>=l&&a<=n&&o>=l&&o<=n&&i.push(e[r])}return this.uniqueValuesInArray(i)},e.prototype.clearSingleFilters=function(e,t){e&&"checkBoxes"==t?this.unCheckedCheckBoxes(this.tempFilter[e]):e&&"range_slider"==t&&this.clearRangeSliderFilter(this.tempFilter[e]),this.applyFilter()},e.prototype.clearAllFilters=function(){this.filterData=[],this.sort=this.defaultSort,this.searchText=this.defaultSearch;for(var e=this.config.filter.filterParameter.length-1;e>=0;e--)this.config.filter.filterParameter[e].isShowFilter&&(this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[e].filterBy)&&"checkBoxes"===this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterType?this.unCheckedCheckBoxes(this.tempFilter[this.config.filter.filterParameter[e].filterBy]):this.tempFilter.hasOwnProperty(this.config.filter.filterParameter[e].filterBy)&&"range_slider"===this.tempFilter[this.config.filter.filterParameter[e].filterBy].filterType&&this.clearRangeSliderFilter(this.tempFilter[this.config.filter.filterParameter[e].filterBy]));this.filterData=this.data,this.filteredData.emit(this.filterData)},e.prototype.unCheckedCheckBoxes=function(e){e.forEach((function(e){e.isChecked=!1}))},e.prototype.clearRangeSliderFilter=function(e){e.rangeValue=e.defaultRangeValue,e.dropDownRangeValues=[],e.dropDownRangeValues=e.defaultRangeValue},e.prototype.showMoreItems=function(e,t){t?(this.tempFilter[e].filterCheckBoxLimit=this.tempFilter[e].length,this.tempFilter[e].isShowMore=!0):t||(this.tempFilter[e].isShowMore=!1)},e.prototype.rangeDropDownOnChange=function(e){e.rangeValue=e.dropDownRangeValues,this.applyFilter()},e.prototype.sliderChange=function(e){e.dropDownRangeValues=e.rangeValue},e}();m.decorators=[{type:t.Component,args:[{selector:"ngx-filter-search",template:'<div class="row" *ngIf="data && config">\n  <div class="col-sm-12">\n     <div class="row pt-1 pb-1">\n       <div class="col-sm-6">\n\n       </div>\n       <div class="col-sm-6">\n         <h6 class="float-right cursor-pointer text-primary" (click)="clearAllFilters()">Clear All</h6>\n       </div>\n     </div>\n      <div *ngIf="config?.search?.isSearchShow" class="pt-1 pb-1">\n        <strong class="pt-2 pb-2 font-weight-bold text-capitalize">Search</strong>\n          <div class="input-group pt-1">\n            <div class="form-outline">\n              <input type="text" id="form1" class="form-control" [(ngModel)]="searchText" placeholder="Search Keyword..." (keyup)="applyFilter()"/>\n            </div>\n          </div>\n      </div>\n      <hr>\n      <div *ngIf="config?.filter?.isShowFilter && tempFilter">\n        <div *ngFor="let config of config.filter.filterParameter; let i = index;let last = last;">\n            <div *ngIf="config?.isShowFilter && tempFilter[config.filterBy]">\n              <div class="row pt-1 pb-1" *ngIf="(((!config?.minimumShowLimit && tempFilter[config.filterBy].length > 0) || (tempFilter[config.filterBy].length > config?.minimumShowLimit && config?.isShowFilter && config?.filterType == \'checkBoxes\' && tempFilter[config.filterBy].length > 0)) || (config?.filterType == \'range_slider\' && tempFilter[config.filterBy].maxValue > 0 ))">\n                <div class="col-sm-8 float-left">\n                  <strong class="font-weight-bold">{{ tempFilter[config.filterBy]?.filterTitle}}</strong>\n                </div>\n                <div class="col-sm-4">\n                  <h6 class="float-right cursor-pointer text-primary clear" (click)="clearSingleFilters(tempFilter[config.filterBy].filterBy,tempFilter[config.filterBy].filterType)">Clear</h6>\n                </div>\n              </div>\n              <div *ngIf="(config?.isShowFilter && config?.filterType == \'checkBoxes\' && (!config?.minimumShowLimit || (tempFilter[config.filterBy].length > config?.minimumShowLimit))) ">\n                <div class="" *ngFor="let filter of tempFilter[config.filterBy] | slice : 0:(!tempFilter[config.filterBy].isShowMore ? config.filterCheckBoxLimit : tempFilter[config.filterBy].filterCheckBoxLimit); let i = index">\n                  <input type="checkbox" [id]="filter.fieldName" [name]="filter.fieldName" [value]="filter.fieldValue" [(ngModel)]="filter.isChecked" (change)="applyFilter()">\n                  <span class="pl-2 font-small">\n                    {{filter.fieldName}}\n                  </span>\n                </div>\n                <div *ngIf="tempFilter[config.filterBy].length > config?.filterCheckBoxLimit ">\n                  <h6 class="cursor-pointer text-primary pt-1" *ngIf ="!tempFilter[config.filterBy].isShowMore" (click)="showMoreItems(tempFilter[config.filterBy].filterBy,true)">\n                  {{ tempFilter[config.filterBy].length - config.filterCheckBoxLimit }} More\n                  </h6>\n                  <h6 class="cursor-pointer text-primary pt-1" *ngIf ="tempFilter[config.filterBy].isShowMore" (click)="showMoreItems(tempFilter[config.filterBy].filterBy, false)">\n                    Show Less\n                  </h6>\n                </div>\n            </div>\n            <div *ngIf="config?.isShowFilter && config?.filterType == \'range_slider\' && tempFilter[config.filterBy].maxValue > 0">\n              \x3c!-- (change)="loanChange($event)" \n               [ticks]="tempFilter[config.filterBy].ticks" \n               [ticks]="tempFilter[config.filterBy].ticks"\n              --\x3e\n              \x3c!-- {{tempFilter[config.filterBy].ticks | json}} --\x3e\n              \x3c!-- {{tempFilter[config.filterBy]  | json}} --\x3e\n              \x3c!-- {{tempFilter[config.filterBy].minValue}} --\x3e\n              \x3c!-- {{tempFilter[config.filterBy | json}} --\x3e\n              \x3c!-- [ticks]="tempFilter[config.filterBy].ticks" \n                [tooltip]="tempFilter[config.filterBy].tooltip"\n                 [ticks]="tempFilter[config.filterBy].ticks"\n                 [tooltip]="tempFilter[config.filterBy].tooltip"\n              --\x3e \n              \x3c!-- [ticks]="tempFilter[config.filterBy].ticks" --\x3e\n              <span class="min">\n                <span>\n                  {{tempFilter[config.filterBy].rangeValue[0]}} - {{tempFilter[config.filterBy].rangeValue[1]}}\n                </span>\n              </span>\n              <ejs-slider\n                id="range"\n                [(value)]="tempFilter[config.filterBy].rangeValue"\n                [min]="tempFilter[config.filterBy].minValue"\n                [max]="tempFilter[config.filterBy].maxValue"\n                [step]="tempFilter[config.filterBy].rangeStep"\n                [type]="\'Range\'"\n                (change)="sliderChange(tempFilter[config?.filterBy])"\n                (changed)="applyFilter()">\n                </ejs-slider>\n                 \x3c!-- <div class="row">\n                  <div class="col-sm-6">\n                    <span class="float-left min">₹ {{tempFilter[config.filterBy].minValue}}</span>\n                  </div>\n                  <div class="col-sm-6">\n                    <span class="float-right min">₹ {{tempFilter[config.filterBy].maxValue}}</span>\n                  </div>\n                 </div> --\x3e\n                \x3c!-- <div class="row" *ngIf="tempFilter[config.filterBy].dropdown.length > 0">\n                    <div class="col-sm-6 ">\n                        <div class="pt-1">\n                          <select class="browser-default custom-select float-right range-select" \n                            [(ngModel)]="tempFilter[config.filterBy].dropDownRangeValues[0]"\n                            (change)="rangeDropDownOnChange(tempFilter[config.filterBy])">\n                            <option\n                            *ngFor="let value of tempFilter[config.filterBy].dropdown"\n                            [ngValue]="value"\n                            >\n                            {{ value | currencyLocal:\'INR\'}}\n                            </option>\n                          </select>\n                        </div>\n                    </div>\n                    <div class="col-sm-6 ">\n                        <div class="pt-1">\n                          <select class="browser-default custom-select float-right range-select"\n                          [(ngModel)]="tempFilter[config.filterBy].dropDownRangeValues[1]"\n                          (change)="rangeDropDownOnChange(tempFilter[config.filterBy])">\n                            <option\n                            *ngFor="let value of tempFilter[config.filterBy].dropdown"\n                             [ngValue]="value"\n                            >\n                            {{ value | currencyLocal:\'INR\'}}\n                            </option>\n                          </select>\n                        </div>\n                    </div>\n                </div> --\x3e\n              </div>\n            <hr *ngIf="(!last && ((!config?.minimumShowLimit || (tempFilter[config.filterBy].length > config?.minimumShowLimit && config?.isShowFilter && config?.filterType == \'checkBoxes\')) || (config?.filterType == \'range_slider\')))">\n          </div>\n        </div>\n      </div>\n  </div>\n</div>\n',styles:[""]}]}],m.ctorParameters=function(){return[]},m.propDecorators={data:[{type:t.Input}],config:[{type:t.Input}],filteredData:[{type:t.Output}]};var u=function(){};u.decorators=[{type:t.NgModule,args:[{declarations:[m],imports:[a.BrowserModule,n.CommonModule,r.SliderModule,l.FormsModule],exports:[m]}]}],e.NgxFilterSearchComponent=m,e.NgxFilterSearchModule=u,e.NgxFilterSearchService=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-filter-search.umd.min.js.map